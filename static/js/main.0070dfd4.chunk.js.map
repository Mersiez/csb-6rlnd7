{"version":3,"sources":["App.js","index.js"],"names":["round","n","Number","toFixed","generateHSLA","_ref","hue","Math","random","saturation","light","alpha","concat","generateLGData","count","arguments","length","undefined","angel","lines","Array","from","map","incrementDeg","deg","rate","handleFullScreen","e","keyCode","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","App","speed","setSpeed","React","useState","lgDataList","setLgDataList","useEffect","requestAnimationFrame","_ref2","i","_ref3","background","_ref4","color","join","generateLG","_jsx","tabIndex","style","onKeyDown","children","_jsxs","type","value","onChange","currentTarget","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"oNAGA,MAAMA,EAASC,GAAMC,OAAOD,EAAEE,QAAQ,IAEtC,SAASC,EAAYC,GAKjB,IALkB,IACpBC,EAAMN,EAAsB,IAAhBO,KAAKC,UAAe,WAChCC,EAAaT,EAAsB,GAAhBO,KAAKC,UAAc,MACtCE,EAAQ,GAAE,MACVC,EAAQ,IACTN,EACC,MAAM,QAANO,OAAeN,EAAG,SAAAM,OAAQH,EAAU,OAAAG,OAAMF,EAAK,OAAAE,OAAMD,EAAK,IAC5D,CAYA,SAASE,IAA2B,IAAZC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC9B,MAAO,CACLG,MAAOlB,EAAsB,IAAhBO,KAAKC,UAClBW,MAAOC,MAAMC,KAAK,CAAEL,OAAQF,IAASQ,KAAI,MACvChB,IAAKN,EAAsB,IAAhBO,KAAKC,UAChBC,WAAYT,EAAsB,GAAhBO,KAAKC,SAAgB,QAG7C,CAEA,SAASe,EAAaC,EAAKC,GACzB,OAAQD,EAAMC,GADsBV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACT,GAChC,CAEA,MAAMW,EAAoBC,IACN,KAAdA,EAAEC,UACCC,SAASC,kBAGRD,SAASE,gBACXF,SAASE,iBAHXF,SAASG,gBAAgBC,oBAM7B,EAGa,SAASC,IACtB,MAAOC,EAAOC,GAAYC,IAAMC,SAAS,KAClCC,EAAYC,GAAiBH,IAAMC,UAAS,IAAM,CACvDzB,EAAe,GACfA,EAAe,GACfA,EAAe,MAGjBwB,IAAMI,WAAU,KACdC,uBAAsB,IACpBF,EACED,EAAWjB,KAAI,CAAAqB,EAAmBC,KAAC,IAAnB,MAAE1B,EAAK,MAAEC,GAAOwB,EAAA,MAAS,CACvCzB,MAAOK,EAAaL,EAAO,EAAK0B,EAAI,EAAK,EAAGT,EAAQ,IAAM,GAC1DhB,MAAOA,EAAMG,KAAIuB,IAAA,IAAC,IAAEvC,EAAG,WAAEG,GAAYoC,EAAA,MAAM,CACzCvC,IAAKiB,EAAajB,EAAK,EAAKsC,EAAI,EAAK,EAAGT,EAAQ,IAAM,GACtD1B,aACD,IACF,MAEJ,IAGH,MAAMqC,EAAaP,EAChBjB,KAAIyB,IAAA,IAAC,MAAE7B,EAAK,MAAEC,GAAO4B,EAAA,OA3D1B,WAGG,IAFD7B,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGf,EAAsB,IAAhBO,KAAKC,UACnBW,EAAKJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAACX,IAAgBA,IAAgBA,KAEzC,MAAMU,EAAQK,EAAMH,OAGpB,OAFAG,EAAQA,EAAMG,KAAI,CAAC0B,EAAOJ,IAAC,GAAAhC,OAAQoC,EAAK,KAAApC,OAAIZ,EAAO4C,EAAI9B,EAAS,KAAI,OAE9D,mBAANF,OAA0BM,EAAK,SAAAN,OAAQO,EAAM8B,KAAK,KAAI,IACxD,CAmD+BC,CAAWhC,EAAOC,EAAMG,IAAIlB,GAAc,IACpE6C,KAAK,KAER,OACEE,cAAA,QACEC,SAAU,EACVC,MAAO,CAAE,OAAQP,GACjBQ,UAAW5B,EAAiB6B,SAE5BC,eAAA,SAAAD,SAAA,CAAO,QAELJ,cAAA,SACAA,cAAA,SACEM,KAAK,QACLC,MAAOvB,EACPwB,SAAWhC,GAAMS,GAAUT,EAAEiC,cAAcF,aAKrD,CCxFA,MAAMG,EAAchC,SAASiC,eAAe,QAC5CC,IAASC,OACPb,cAACc,aAAU,CAAAV,SACTJ,cAACjB,EAAG,MAEN2B,E","file":"static/js/main.0070dfd4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst round = (n) => Number(n.toFixed(0));\n\nfunction generateHSLA({\n  hue = round(Math.random() * 360),\n  saturation = round(Math.random() * 50),\n  light = 50,\n  alpha = 0.3\n}) {\n  return `hsla(${hue}deg, ${saturation}%, ${light}%, ${alpha})`;\n}\n\nfunction generateLG(\n  angel = round(Math.random() * 180),\n  lines = [generateHSLA(), generateHSLA(), generateHSLA()]\n) {\n  const count = lines.length;\n  lines = lines.map((color, i) => `${color} ${round((i / count) * 100)}%`);\n\n  return `linear-gradient(${angel}deg, ${lines.join(\",\")})`;\n}\n\nfunction generateLGData(count = 2) {\n  return {\n    angel: round(Math.random() * 180),\n    lines: Array.from({ length: count }).map(() => ({\n      hue: round(Math.random() * 360),\n      saturation: round(Math.random() * 50 + 50)\n    }))\n  };\n}\n\nfunction incrementDeg(deg, rate, force = 0.5) {\n  return (deg + rate * force) % 360;\n}\n\nconst handleFullScreen = (e) => {\n  if (e.keyCode === 13) {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n  }\n};\n\nexport default function App() {\n  const [speed, setSpeed] = React.useState(50);\n  const [lgDataList, setLgDataList] = React.useState(() => [\n    generateLGData(2),\n    generateLGData(3),\n    generateLGData(2)\n  ]);\n\n  React.useEffect(() => {\n    requestAnimationFrame(() =>\n      setLgDataList(\n        lgDataList.map(({ angel, lines }, i) => ({\n          angel: incrementDeg(angel, 1 - (i % 2) * 2, speed / 100 / 2),\n          lines: lines.map(({ hue, saturation }) => ({\n            hue: incrementDeg(hue, 1 - (i % 2) * 2, speed / 100 / 2),\n            saturation\n          }))\n        }))\n      )\n    );\n  });\n\n  const background = lgDataList\n    .map(({ angel, lines }) => generateLG(angel, lines.map(generateHSLA)))\n    .join(\",\");\n\n  return (\n    <main\n      tabIndex={0}\n      style={{ \"--bg\": background }}\n      onKeyDown={handleFullScreen}\n    >\n      <label>\n        speed\n        <br />\n        <input\n          type=\"range\"\n          value={speed}\n          onChange={(e) => setSpeed(+e.currentTarget.value)}\n        />\n      </label>\n    </main>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}